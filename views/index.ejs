<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Waschmaschine</title>
        <link rel="stylesheet" type="text/css" href="/css/style.css">
    </head>
    <body>            
        <script type="text/javascript">
        // Script f√ºr Antwort auf Post-Requests
            <% if (postFinished && !postSucessful) { %>
                alert("Waschgang konnte nicht eingetragen werden, Energiewert unrealistisch klein.");
            <% } else if ( postFinished && postSucessful){ %>
                alert("Waschgang wurde erfolgreich eingetragen!");
            <% } %>

            // Perform AJAX: Asynchronous JavaScript and HTML in order to reload data dynamically
            function refreshData ( ) {
                let xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function() {
                if ( this.readyState == 4 && this.status == 200 && !noUpdate) {
                    let data = JSON.parse(this.responseText);
                    if ( data.power >= 0 ) {
                        document.getElementById("powerData").innerHTML = String(data.power) + " W";
                    } else {
                        document.getElementById("powerData").innerHTML = "No value yet";
                    }

                    if ( data.energy >= 0 ) {
                        document.getElementById("energyData").innerHTML = String(data.energy) + " kWh";
                    } else {
                        document.getElementById("energyData").innerHTML = "No value yet";
                    }

                    if ( data.current >= 0 ) {
                        document.getElementById("currentData").innerHTML = String(data.current) + " mA";
                    } else {
                        document.getElementById("currentData").innerHTML = "No value yet";
                    }

                    if ( data.voltage >= 0 ) {
                        document.getElementById("voltageData").innerHTML = String(data.voltage) + " V";
                    } else {
                        document.getElementById("voltageData").innerHTML = "No value yet";
                    }

                    if ( data.uptime >= 0 ) {
                        document.getElementById("uptimeData").innerHTML = String(data.uptime) + " s";
                    } else {
                        document.getElementById("uptimeData").innerHTML = "No value yet";
                    }
                    if (data.deviceIsOn) {
                        document.getElementById("onButton").innerHTML = "Turn off";
                        document.getElementById("onButton").onclick = turnOff;
                    } else {
                        document.getElementById("onButton").innerHTML = "Turn on";
                        document.getElementById("onButton").onclick = turnOn;
                    }
                }
            };
            xhttp.open("GET", "updateData", true);
            xhttp.send();
        }

        function turnOn( ) {
            let xhttp = new XMLHttpRequest ()
            xhttp.onreadystatechange = function() {
                if ( this.readyState == 4 && this.status == 200 ) {
                    document.getElementById("onButton").innerHTML = "Turn Off";
                    document.getElementById("onButton").onclick = turnOff;
                    noUpdate = false;
                }
                
            }
            noUpdate = true;
            xhttp.open("POST", "state");
            xhttp.setRequestHeader("state", "ON" );
            xhttp.send();
        }

        function turnOff ( ) {
            let xhttp = new XMLHttpRequest ()
            xhttp.onreadystatechange = function() {
                if ( this.readyState == 4 && this.status == 200 ) {
                    document.getElementById("onButton").innerHTML = "Turn On";
                    document.getElementById("onButton").onclick = turnOn;
                    noUpdate = false;
                }
                
            }
            noUpdate = true;
            xhttp.open("POST", "state");
            xhttp.setRequestHeader("state", "OFF" );
            xhttp.send();
        }

        // Refresh data every half seconds.
        let timer = setInterval( refreshData, 2000);
        let noUpdate = false;

        </script>            
        <header>
            <p id="headline">Haier HW70</p>
            <nav>
                <ul>
                    <li><a href="/" class="active">Startseite</a></li>
                    <li><a href="/data">Verbrauchstabelle</a></li>
                </ul>
            </nav>
        </header>
        
        <h2>Infos</h2>
        <div class="InfoContainer">
            <div class="ValueContainer">
                <h3>Power</h3>
                <p id="powerData"><%= deviceData.power %> W</p>
            </div>
            <div class="ValueContainer">
                <h3>Energy</h3>
                <p id="energyData"><%= deviceData.energy %> kWh</p>
            </div>
            <div class="ValueContainer">
                <h3>Current</h3>
                <p id="currentData"><%= deviceData.current %> mA</p>
            </div>
            <div class="ValueContainer">
                <h3>Voltage</h3>
                <p id="voltageData"><%= deviceData.voltage %> V</p>
            </div>
            <div class="ValueContainer">
                <h3>Laufzeit</h3>
                <p id="uptimeData"><%= deviceData.uptime %> s</p>
            </div>
            <div class="ValueContainer">
                <button type="button">
                    <% if(deviceData.deviceIsOn){ %>
                        <p id="onButton">Turn off </p>
                    <% } else{ %>
                        <p id="onButton">Turn on </p>
                    <% } %>
                </button>
            </div>
        </div>
        <br>
        <div class="FormContainer">        
            <h2>Waschgang eintragen</h2>
            <form name="Waschgangstart" class="InforContainer" method="POST">
                    <label for="programField">Programm </label>
                    <input name="program" type="text" id="programField" list="programValues">
                        <datalist id="programValues">
                            <%for ( let i = 0; i < deviceData.programList.length; ++i ) { %>
                                <option value= <%= deviceData.programList[i]%> />
                            <% } %>
                        </datalist>
                        <br><br>
                    <label for="gradField">Temperatur </label>
                    <input name="degree" type="text" id="gradField" list="gradValues">
                        <datalist id="gradValues">
                            <%for ( let i = 0; i < deviceData.degreeList.length; ++i ) { %>
                                <option value=<%= String(deviceData.degreeList[i])%> />
                            <% } %>
                        </datalist>
                        <br><br>
                    <label for="rotationField">Schleuderdrehzahl </label>
                    <input name="rotation" type="text" id="rotationField" list="rotationValues">
                        <datalist id="rotationValues">
                            <%for ( let i = 0; i < deviceData.rotationList.length; ++i ) { %>
                                <option value=<%= String(deviceData.rotationList[i])%> />
                            <% } %>
                        </datalist> 
                        <br><br>

                    <label for="intensiveField">Intensiv </label>
                    <input name="intensive" type="checkbox" id="intensiveField" value="1" checked="on">
                    <br><br>
                <button type="submit">Waschgang eintragen</button>
        </form> 
        </div>
    </body>
</html>